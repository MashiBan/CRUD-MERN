{"ast":null,"code":"var _jsxFileName = \"/Users/mashibann/Downloads/CRUD fullstack/client-side/src/pages/CreatePost.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport Editor from \"../Components/Editor\";\n\n// Use environment variable for API base URL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\nexport default function CreatePost() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [summary, setSummary] = useState('');\n  const [content, setContent] = useState('');\n  const [file, setFile] = useState('');\n  const [redirect, setRedirect] = useState(false);\n  async function createNewPost(e) {\n    e.preventDefault();\n    const postData = {\n      title,\n      summary,\n      content,\n      file\n    };\n    try {\n      const response = await fetch(`${API_BASE_URL}/post`, {\n        mode: 'no-cors',\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(postData),\n        credentials: 'include'\n      });\n      if (response.ok) {\n        setRedirect(true);\n      } else {\n        // Optionally handle errors\n        console.error('Failed to create post');\n      }\n    } catch (error) {\n      console.error('Error creating post:', error);\n    }\n  }\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: createNewPost,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Title\",\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Summary\",\n      value: summary,\n      onChange: e => setSummary(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Image Link\",\n      value: file,\n      onChange: e => setFile(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      onChange: setContent,\n      value: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Create Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(CreatePost, \"8GCiHBH/O3uhQSRPWpoHGBNZu7A=\");\n_c = CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["useState","Navigate","Editor","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","CreatePost","_s","title","setTitle","summary","setSummary","content","setContent","file","setFile","redirect","setRedirect","createNewPost","e","preventDefault","postData","response","fetch","mode","method","headers","body","JSON","stringify","credentials","ok","console","error","to","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","children","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/mashibann/Downloads/CRUD fullstack/client-side/src/pages/CreatePost.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport Editor from \"../Components/Editor\";\n\n// Use environment variable for API base URL\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nexport default function CreatePost() {\n    const [title, setTitle] = useState('');\n    const [summary, setSummary] = useState('');\n    const [content, setContent] = useState('');\n    const [file, setFile] = useState('');\n    const [redirect, setRedirect] = useState(false);\n\n    async function createNewPost(e) {\n        e.preventDefault();\n        const postData = {\n            title,\n            summary,\n            content,\n            file\n        };\n\n        try {\n            const response = await fetch(`${API_BASE_URL}/post`, {\n                mode: 'no-cors',\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(postData),\n                credentials: 'include',\n            });\n\n            if (response.ok) {\n                setRedirect(true);\n            } else {\n                // Optionally handle errors\n                console.error('Failed to create post');\n            }\n        } catch (error) {\n            console.error('Error creating post:', error);\n        }\n    }\n\n    if (redirect) {\n        return <Navigate to=\"/\" />;\n    }\n\n    return (\n        <form onSubmit={createNewPost}>\n            <input\n                type=\"text\"\n                placeholder=\"Title\"\n                value={title}\n                onChange={e => setTitle(e.target.value)}\n            />\n            <input\n                type=\"text\"\n                placeholder=\"Summary\"\n                value={summary}\n                onChange={e => setSummary(e.target.value)}\n            />\n            <input\n                type=\"text\"\n                placeholder=\"Image Link\"\n                value={file}\n                onChange={e => setFile(e.target.value)}\n            />\n            <Editor\n                onChange={setContent}\n                value={content}\n            />\n            <button type=\"submit\">Create Post</button>\n        </form>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}