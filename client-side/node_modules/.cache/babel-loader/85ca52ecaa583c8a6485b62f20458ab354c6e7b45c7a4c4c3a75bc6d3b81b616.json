{"ast":null,"code":"var _jsxFileName = \"/Users/mashibann/Downloads/CRUD fullstack/client-side/src/pages/LoginPage.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginPage() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [redirect, setRedirect] = useState(false);\n  async function login(e) {\n    e.preventDefault();\n    const response = await fetch('http://localhost:4000/login', {\n      method: 'POST',\n      body: JSON.stringify({\n        username,\n        password\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include'\n    });\n    if (response.ok) {\n      setRedirect(true);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Welcome Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      className: \"login\",\n      onSubmit: login,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginPage, \"akJCtea06E3X9APQvCKcOXGIZ6s=\");\n_c = LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","LoginPage","_s","username","setUsername","password","setPassword","redirect","setRedirect","login","e","preventDefault","response","fetch","method","body","JSON","stringify","headers","credentials","ok","className","children","fileName","_jsxFileName","lineNumber","columnNumber","action","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/mashibann/Downloads/CRUD fullstack/client-side/src/pages/LoginPage.js"],"sourcesContent":["import { useState } from \"react\";\n\nexport default function LoginPage(){\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [redirect, setRedirect] = useState(false);\n\n    async function login(e){\n        e.preventDefault();\n        const response = await fetch('http://localhost:4000/login' , {\n            method: 'POST',\n            body: JSON.stringify({username, password}),\n            headers: {'Content-Type' : 'application/json'},\n            credentials: 'include',\n        });\n\n        if(response.ok){\n            setRedirect(true);\n        }\n    }\n\n    return(\n        <div className=\"form\">\n             <p>Welcome Back</p>\n            <form action=\"\" className=\"login\" onSubmit={login}>\n                <h2>Login</h2>\n                <input type=\"text\" \n                placeholder=\"username\" \n                value={username} \n                onChange={(e) => setUsername(e.target.value)\n                }></input>\n                <input type=\"password\" \n                placeholder=\"password\"\n                value={password} \n                onChange={(e) => setPassword(e.target.value)\n                }></input>\n                <button>Login</button>\n            </form>\n        </div>\n    );\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,eAAe,SAASC,SAASA,CAAA,EAAE;EAAAC,EAAA;EAE/B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE/C,eAAeW,KAAKA,CAACC,CAAC,EAAC;IACnBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAG;MACzDC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACd,QAAQ;QAAEE;MAAQ,CAAC,CAAC;MAC1Ca,OAAO,EAAE;QAAC,cAAc,EAAG;MAAkB,CAAC;MAC9CC,WAAW,EAAE;IACjB,CAAC,CAAC;IAEF,IAAGP,QAAQ,CAACQ,EAAE,EAAC;MACXZ,WAAW,CAAC,IAAI,CAAC;IACrB;EACJ;EAEA,oBACIR,OAAA;IAAKqB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBAChBtB,OAAA;MAAAsB,QAAA,EAAG;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACpB1B,OAAA;MAAM2B,MAAM,EAAC,EAAE;MAACN,SAAS,EAAC,OAAO;MAACO,QAAQ,EAAEnB,KAAM;MAAAa,QAAA,gBAC9CtB,OAAA;QAAAsB,QAAA,EAAI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACd1B,OAAA;QAAO6B,IAAI,EAAC,MAAM;QAClBC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAE5B,QAAS;QAChB6B,QAAQ,EAAGtB,CAAC,IAAKN,WAAW,CAACM,CAAC,CAACuB,MAAM,CAACF,KAAK;MAC1C;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACV1B,OAAA;QAAO6B,IAAI,EAAC,UAAU;QACtBC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAE1B,QAAS;QAChB2B,QAAQ,EAAGtB,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAACuB,MAAM,CAACF,KAAK;MAC1C;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACV1B,OAAA;QAAAsB,QAAA,EAAQ;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd;AAACxB,EAAA,CAvCuBD,SAAS;AAAAiC,EAAA,GAATjC,SAAS;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}