{"ast":null,"code":"var _jsxFileName = \"/Users/mashibann/Downloads/CRUD fullstack/client-side/src/pages/CreatePost.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport Editor from \"../Components/Editor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreatePost() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [summary, setSummary] = useState('');\n  const [content, setContent] = useState('');\n  const [file, setFile] = useState('');\n  const [redirect, setRedirect] = useState(false);\n  async function createNewPost(e) {\n    e.preventDefault();\n    const data = new FormData();\n    data.set('title', title);\n    data.set('summary', summary);\n    data.set('content', content);\n    data.set('id', id);\n    const response = await fetch('https://crud-mern-2caq.onrender.com/post', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data),\n      credentials: 'include'\n    });\n    if (response.ok) {\n      setRedirect(true);\n    } else {\n      // Optionally handle errors\n      console.error('Failed to create post');\n    }\n  }\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: createNewPost,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Title\",\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Summary\",\n      value: summary,\n      onChange: e => setSummary(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Image Link\",\n      value: file,\n      onChange: e => setFile(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      onChange: setContent,\n      value: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Create Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(CreatePost, \"8GCiHBH/O3uhQSRPWpoHGBNZu7A=\");\n_c = CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["useState","Navigate","Editor","jsxDEV","_jsxDEV","CreatePost","_s","title","setTitle","summary","setSummary","content","setContent","file","setFile","redirect","setRedirect","createNewPost","e","preventDefault","data","FormData","set","id","response","fetch","method","headers","body","JSON","stringify","credentials","ok","console","error","to","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","children","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/mashibann/Downloads/CRUD fullstack/client-side/src/pages/CreatePost.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport Editor from \"../Components/Editor\";\n\nexport default function CreatePost() {\n    const [title, setTitle] = useState('');\n    const [summary, setSummary] = useState('');\n    const [content, setContent] = useState('');\n    const [file, setFile] = useState('');\n    const [redirect, setRedirect] = useState(false);\n\n    async function createNewPost(e) {\n        e.preventDefault();\n        const data = new FormData();\n        data.set('title', title);\n        data.set('summary', summary);\n        data.set('content', content);\n        data.set('id', id);\n        const response = await fetch('https://crud-mern-2caq.onrender.com/post', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n            credentials: 'include',\n        });\n\n        if (response.ok) {\n            setRedirect(true);\n        } else {\n            // Optionally handle errors\n            console.error('Failed to create post');\n        }\n    }\n\n    if (redirect) {\n        return <Navigate to=\"/\" />;\n    }\n\n    return (\n        <form onSubmit={createNewPost}>\n            <input\n                type=\"text\"\n                placeholder=\"Title\"\n                value={title}\n                onChange={e => setTitle(e.target.value)}\n            />\n            <input\n                type=\"text\"\n                placeholder=\"Summary\"\n                value={summary}\n                onChange={e => setSummary(e.target.value)}\n            />\n            <input\n                type=\"text\"\n                placeholder=\"Image Link\"\n                value={file}\n                onChange={e => setFile(e.target.value)}\n            />\n            <Editor\n                onChange={setContent}\n                value={content}\n            />\n            <button type=\"submit\">Create Post</button>\n        </form>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}