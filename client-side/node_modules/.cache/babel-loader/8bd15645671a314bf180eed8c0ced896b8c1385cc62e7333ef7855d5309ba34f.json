{"ast":null,"code":"var _jsxFileName = \"/Users/mashibann/Downloads/CRUD fullstack/client-side/src/pages/EditPost.js\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ReactTimeAgo from 'react-time-ago';\nimport { Link } from \"react-router-dom\";\nimport { UserContext } from '../Context/userContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst modules = {\n  toolbar: [[{\n    'header': [1, 2, false]\n  }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n    'list': 'ordered'\n  }, {\n    'list': 'bullet'\n  }, {\n    'indent': '-1'\n  }, {\n    'indent': '+1'\n  }], ['link', 'image'], ['clean']]\n};\nconst formats = ['header', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'link', 'image'];\nexport default function EditPost() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [summary, setSummary] = useState('');\n  const [content, setContent] = useState('');\n  const [file, setFile] = useState('');\n  const [redirect, setRedirect] = useState(false);\n  function updatePost(e) {\n    e.preventDefault;\n  }\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: '/'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: updatePost,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"title\",\n      placeholder: \"Title\",\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"summary\",\n      placeholder: \"Summary\",\n      value: summary,\n      onChange: e => setSummary(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Image Link\",\n      value: file,\n      onChange: e => setFile(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n      value: content,\n      modules: modules,\n      formats: formats,\n      onChange: newValue => setContent(newValue)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Create Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(EditPost, \"8GCiHBH/O3uhQSRPWpoHGBNZu7A=\");\n_c = EditPost;\nvar _c;\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["useContext","useEffect","useState","useParams","ReactTimeAgo","Link","UserContext","jsxDEV","_jsxDEV","modules","toolbar","formats","EditPost","_s","title","setTitle","summary","setSummary","content","setContent","file","setFile","redirect","setRedirect","updatePost","e","preventDefault","Navigate","to","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","children","type","placeholder","value","onChange","target","ReactQuill","newValue","_c","$RefreshReg$"],"sources":["/Users/mashibann/Downloads/CRUD fullstack/client-side/src/pages/EditPost.js"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport ReactTimeAgo from 'react-time-ago'\nimport { Link } from \"react-router-dom\"\nimport {UserContext} from '../Context/userContext'\n\nconst modules = {\n    toolbar: [\n        [{ 'header': [1, 2, false] }],\n        ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n        [{ 'list': 'ordered' }, { 'list': 'bullet' }, { 'indent': '-1' }, { 'indent': '+1' }],\n        ['link', 'image'],\n        ['clean']\n    ],\n};\n\nconst formats = [\n    'header',\n    'bold', 'italic', 'underline', 'strike', 'blockquote',\n    'list', 'bullet', 'indent',\n    'link', 'image'\n];\n\nexport default function EditPost(){\n\n    const [title, setTitle] = useState('');\n    const [summary, setSummary] = useState('');\n    const [content, setContent] = useState('');\n    const [file, setFile] = useState('');\n    const [redirect, setRedirect] = useState(false);\n\n    function updatePost(e){\n        e.preventDefault;\n    }\n\n\n    if (redirect) {\n        return <Navigate to={'/'} />;\n    }\n\n    return (\n        <form onSubmit={updatePost}>\n            <input\n                type=\"title\"\n                placeholder=\"Title\"\n                value={title}\n                onChange={e => setTitle(e.target.value)}\n            />\n            <input\n                type=\"summary\"\n                placeholder=\"Summary\"\n                value={summary}\n                onChange={e => setSummary(e.target.value)}\n            />\n            <input\n                type=\"text\"\n                placeholder=\"Image Link\"\n                value={file}\n                onChange={e => setFile(e.target.value)}\n            />\n            <ReactQuill\n                value={content}\n                modules={modules}\n                formats={formats}\n                onChange={newValue => setContent(newValue)}\n            />\n            <button type=\"submit\">Create Post</button>\n        </form>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}