{"ast":null,"code":"var _jsxFileName = \"/Users/mashibann/Downloads/CRUD fullstack/client-side/src/pages/HomePage.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Posts from \"../Components/Posts\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function HomePage() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    // Fetch posts from the API\n    fetch('http://localhost:4000/post').then(response => response.json()).then(data => setPosts(data)).catch(error => console.error('Error fetching posts:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: posts.length > 0 ? posts.map(post => /*#__PURE__*/_jsxDEV(Posts, {\n      ...post\n    }, post._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No posts available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}\n_s(HomePage, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["useEffect","useState","Posts","jsxDEV","_jsxDEV","Fragment","_Fragment","HomePage","_s","posts","setPosts","fetch","then","response","json","data","catch","error","console","children","length","map","post","_id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mashibann/Downloads/CRUD fullstack/client-side/src/pages/HomePage.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport Posts from \"../Components/Posts\";\n\nexport default function HomePage() {\n    const [posts, setPosts] = useState([]);\n\n    useEffect(() => {\n        // Fetch posts from the API\n        fetch('http://localhost:4000/post')\n            .then(response => response.json())\n            .then(data => setPosts(data))\n            .catch(error => console.error('Error fetching posts:', error));\n    }, []);\n\n    return (\n        <>\n            {posts.length > 0 ? (\n                posts.map(post => (\n                    <Posts key={post._id} {...post} />\n                ))\n            ) : (\n                <p>No posts available</p>\n            )}\n        </>\n    );\n}\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACZ;IACAW,KAAK,CAAC,4BAA4B,CAAC,CAC9BC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,QAAQ,CAACK,IAAI,CAAC,CAAC,CAC5BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC;EACtE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIb,OAAA,CAAAE,SAAA;IAAAa,QAAA,EACKV,KAAK,CAACW,MAAM,GAAG,CAAC,GACbX,KAAK,CAACY,GAAG,CAACC,IAAI,iBACVlB,OAAA,CAACF,KAAK;MAAA,GAAoBoB;IAAI,GAAlBA,IAAI,CAACC,GAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CACpC,CAAC,gBAEFvB,OAAA;MAAAe,QAAA,EAAG;IAAkB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAC3B,gBACH,CAAC;AAEX;AAACnB,EAAA,CAtBuBD,QAAQ;AAAAqB,EAAA,GAARrB,QAAQ;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}