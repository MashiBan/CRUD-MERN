{"ast":null,"code":"var _jsxFileName = \"/Users/mashibann/Downloads/CRUD fullstack/client-side/src/Components/Editor.js\";\nimport ReactQuill from \"react-quill\";\nimport 'react-quill/dist/quill.snow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst modules = {\n  toolbar: [[{\n    'header': [1, 2, false]\n  }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n    'list': 'ordered'\n  }, {\n    'list': 'bullet'\n  }, {\n    'indent': '-1'\n  }, {\n    'indent': '+1'\n  }], ['link', 'image'], ['clean']]\n};\nconst formats = ['header', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'link', 'image'];\nexport default function Editor() {\n  return /*#__PURE__*/_jsxDEV(ReactQuill, {\n    value: content,\n    modules: modules,\n    formats: formats,\n    onChange: newValue => setContent(newValue)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_c = Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["ReactQuill","jsxDEV","_jsxDEV","modules","toolbar","formats","Editor","value","content","onChange","newValue","setContent","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mashibann/Downloads/CRUD fullstack/client-side/src/Components/Editor.js"],"sourcesContent":["import ReactQuill from \"react-quill\";\nimport 'react-quill/dist/quill.snow.css';\n\nconst modules = {\n    toolbar: [\n        [{ 'header': [1, 2, false] }],\n        ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n        [{ 'list': 'ordered' }, { 'list': 'bullet' }, { 'indent': '-1' }, { 'indent': '+1' }],\n        ['link', 'image'],\n        ['clean']\n    ],\n};\n\nconst formats = [\n    'header',\n    'bold', 'italic', 'underline', 'strike', 'blockquote',\n    'list', 'bullet', 'indent',\n    'link', 'image'\n];\n\n\nexport default function Editor(){\n    return(     \n        <ReactQuill\n        value={content}\n        modules={modules}\n        formats={formats}\n        onChange={newValue => setContent(newValue)}\n    />\n    );\n}"],"mappings":";AAAA,OAAOA,UAAU,MAAM,aAAa;AACpC,OAAO,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,OAAO,GAAG;EACZC,OAAO,EAAE,CACL,CAAC;IAAE,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK;EAAE,CAAC,CAAC,EAC7B,CAAC,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,YAAY,CAAC,EACvD,CAAC;IAAE,MAAM,EAAE;EAAU,CAAC,EAAE;IAAE,MAAM,EAAE;EAAS,CAAC,EAAE;IAAE,QAAQ,EAAE;EAAK,CAAC,EAAE;IAAE,QAAQ,EAAE;EAAK,CAAC,CAAC,EACrF,CAAC,MAAM,EAAE,OAAO,CAAC,EACjB,CAAC,OAAO,CAAC;AAEjB,CAAC;AAED,MAAMC,OAAO,GAAG,CACZ,QAAQ,EACR,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,YAAY,EACrD,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAC1B,MAAM,EAAE,OAAO,CAClB;AAGD,eAAe,SAASC,MAAMA,CAAA,EAAE;EAC5B,oBACIJ,OAAA,CAACF,UAAU;IACXO,KAAK,EAAEC,OAAQ;IACfL,OAAO,EAAEA,OAAQ;IACjBE,OAAO,EAAEA,OAAQ;IACjBI,QAAQ,EAAEC,QAAQ,IAAIC,UAAU,CAACD,QAAQ;EAAE;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEN;AAACC,EAAA,GATuBV,MAAM;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}